# Generated by Django 5.0.6 on 2025-07-14 01:52

from django.db import migrations, models
import django.db.models.deletion


def rebuild_tree(apps, schema_editor):
    """重建 MPTT 树结构"""
    Category = apps.get_model('products', 'Category')
    
    # 获取所有根节点（没有父节点的节点）
    root_nodes = Category.objects.filter(parent=None)
    
    # 为每个根节点构建树
    tree_id = 1
    for root in root_nodes:
        _rebuild_subtree(root, tree_id, 1)
        tree_id += 1


def _rebuild_subtree(node, tree_id, level):
    """递归重建子树"""
    # 设置当前节点的 tree_id 和 level
    node.tree_id = tree_id
    node.level = level
    
    # 获取子节点
    children = node.children.all().order_by('order', 'name')
    
    # 设置左值
    left = 1
    if hasattr(node, '_left_counter'):
        left = node._left_counter
    else:
        # 计算左值（基于父节点的左值）
        if node.parent:
            left = node.parent.lft + 1
        else:
            left = 1
    
    node.lft = left
    
    # 处理子节点
    current_right = left + 1
    for child in children:
        child._left_counter = current_right
        _rebuild_subtree(child, tree_id, level + 1)
        current_right = child.rght + 1
    
    # 设置右值
    node.rght = current_right
    node.save()


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        # 添加 MPTT 字段
        migrations.AddField(
            model_name='category',
            name='lft',
            field=models.PositiveIntegerField(default=1, editable=False),
        ),
        migrations.AddField(
            model_name='category',
            name='rght',
            field=models.PositiveIntegerField(default=2, editable=False),
        ),
        migrations.AddField(
            model_name='category',
            name='tree_id',
            field=models.PositiveIntegerField(default=1, editable=False, db_index=True),
        ),
        migrations.AddField(
            model_name='category',
            name='level',
            field=models.PositiveIntegerField(default=0, editable=False),
        ),
        
        # 重建树结构
        migrations.RunPython(rebuild_tree, reverse_code=migrations.RunPython.noop),
    ]
