# Generated by Django 5.0.6 on 2025-07-14 01:08

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='属性名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='属性编码')),
                ('type', models.CharField(choices=[('text', '文本'), ('number', '数字'), ('select', '单选'), ('multiselect', '多选'), ('boolean', '布尔值'), ('date', '日期'), ('color', '颜色'), ('image', '图片')], max_length=20, verbose_name='属性类型')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='单位')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('is_required', models.BooleanField(default=False, verbose_name='是否必填')),
                ('is_filterable', models.BooleanField(default=True, verbose_name='是否可筛选')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '属性',
                'verbose_name_plural': '属性',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='品牌名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='品牌编码')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/logos/', verbose_name='品牌Logo')),
                ('description', models.TextField(blank=True, verbose_name='品牌描述')),
                ('website', models.URLField(blank=True, verbose_name='官方网站')),
                ('contact_person', models.CharField(blank=True, max_length=50, verbose_name='联系人')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='联系电话')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='联系邮箱')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '品牌',
                'verbose_name_plural': '品牌',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='分类编码')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category', verbose_name='父分类')),
            ],
            options={
                'verbose_name': '产品分类',
                'verbose_name_plural': '产品分类',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SKU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='产品名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='产品编码')),
                ('sku_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='SKU ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='价格')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='成本价')),
                ('market_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='市场价')),
                ('stock_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='库存数量')),
                ('min_stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='最小库存')),
                ('description', models.TextField(blank=True, verbose_name='产品描述')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='products/images/', verbose_name='主图')),
                ('attribute_values', models.JSONField(blank=True, default=dict, verbose_name='属性配置')),
                ('selling_points', models.TextField(blank=True, verbose_name='卖点')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='标签')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('active', '上架'), ('inactive', '下架'), ('discontinued', '停产')], default='draft', max_length=20, verbose_name='状态')),
                ('is_featured', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('launch_date', models.DateField(blank=True, null=True, verbose_name='上市日期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skus', to='products.brand', verbose_name='品牌')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '品牌产品',
                'verbose_name_plural': '品牌产品',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/', verbose_name='图片')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='图片描述')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.sku', verbose_name='产品')),
            ],
            options={
                'verbose_name': '产品图片',
                'verbose_name_plural': '产品图片',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='产品名称')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='产品编码')),
                ('description', models.TextField(blank=True, verbose_name='产品描述')),
                ('specifications', models.TextField(blank=True, verbose_name='规格说明')),
                ('usage_scenario', models.TextField(blank=True, verbose_name='使用场景')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spus', to='products.category', verbose_name='产品分类')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': 'SPU产品单元',
                'verbose_name_plural': 'SPU产品单元',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='sku',
            name='spu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skus', to='products.spu', verbose_name='SPU产品单元'),
        ),
        migrations.CreateModel(
            name='SPUAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=False, verbose_name='是否必填')),
                ('default_value', models.CharField(blank=True, max_length=200, verbose_name='默认值')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attribute', verbose_name='属性')),
                ('spu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.spu', verbose_name='SPU')),
            ],
            options={
                'verbose_name': 'SPU属性关联',
                'verbose_name_plural': 'SPU属性关联',
                'ordering': ['order'],
                'unique_together': {('spu', 'attribute')},
            },
        ),
        migrations.AddField(
            model_name='spu',
            name='attributes',
            field=models.ManyToManyField(related_name='spus', through='products.SPUAttribute', to='products.attribute', verbose_name='可配置属性'),
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200, verbose_name='属性值')),
                ('display_name', models.CharField(blank=True, max_length=200, verbose_name='显示名称')),
                ('color_code', models.CharField(blank=True, max_length=7, verbose_name='颜色代码')),
                ('image', models.ImageField(blank=True, null=True, upload_to='attributes/images/', verbose_name='图片')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.attribute', verbose_name='属性')),
            ],
            options={
                'verbose_name': '属性值',
                'verbose_name_plural': '属性值',
                'ordering': ['order', 'value'],
                'unique_together': {('attribute', 'value')},
            },
        ),
    ]
