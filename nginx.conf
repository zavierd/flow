events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 基本配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 上游服务器配置
    upstream django_app {
        server web:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # 客户端最大请求体大小
        client_max_body_size 100M;

        # 静态文件服务 - 优先从 staticfiles 目录提供服务（包含 admin 静态文件）
        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            # 如果文件不存在，尝试从开发静态文件目录查找
            try_files $uri $uri/ @fallback_static;
        }

        # 静态文件回退处理 - 从开发静态文件目录
        location @fallback_static {
            root /app;
            try_files /static$uri =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 媒体文件服务
        location /media/ {
            alias /app/media/;
            expires 1M;
            add_header Cache-Control "public";
        }

        # Django 应用代理 - 透明代理，让Django完全控制路由
        location / {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 关键配置：让Django完全控制URL路由，不进行任何重写
            proxy_set_header X-Script-Name "";
            proxy_redirect off;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 健康检查
        location /health/ {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 